# Global tags can be specified here in key="value" format.
[global_tags]

# Configuration for telegraf agent
[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = false
  # debug = false
  # quiet = false

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# Configuration for sending metrics to InfluxDB
[[outputs.influxdb]]
  ## The target database for metrics; will be created as needed.
  ## For UDP url endpoint database needs to be configured on server side.
  database = "telegraf"

  ## HTTP Basic Auth
  username = "telegraf"
  password = "cisco123"


###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

[[inputs.gnmi]]
  ### Address and port of the gNMI gRPC server
  addresses = ["192.168.123.111:50051","192.168.123.112:50051","192.168.123.115:50051","192.168.123.121:50051","192.168.123.122:50051"]

  ### define credentials
  username = "admin"
  password = "cisco123"

  ## GNMI encoding requested (one of: "proto", "json", "json_ietf")
  encoding = "proto"

  ### enable client-side TLS and define CA to authenticate the device
  enable_tls = true
  tls_ca = "/etc/telegraf/gnmi.pem"
  insecure_skip_verify = true

[inputs.gnmi.tags]
  tag1 = "nxos_gnmi"

[[inputs.gnmi.subscription]]
  origin = "device"
  path = "/System/intf-items/phys-items/PhysIf-list/dbgIfIn-items"
  name = "native_ingress_rate"
  subscription_mode = "sample"
  sample_interval = "10s"

[[inputs.gnmi.subscription]]
  origin = "device"
  path = "/System/intf-items/phys-items/PhysIf-list/dbgIfOut-items"
  name = "native_egress_rate"
  subscription_mode = "sample"
  sample_interval = "10s"

#[[inputs.gnmi.subscription]]
#  ## Name of the measurement that will be emitted
#  name = "openconfig-counters"
#
#  ## Origin and path of the subscription
#  origin = "openconfig-interfaces-counters"
#  path = "/interfaces/interface/state/counters"
#  sample_interval = "10s"
#  subscription_mode = "sample"
